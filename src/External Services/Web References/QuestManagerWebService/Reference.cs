//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace External_Services.QuestManagerWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="questmanager_webserviceSoap", Namespace="questmanager_webservice")]
    public partial class questmanager_webservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback qm_insert_updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback qm_insert_update_send_ext_notifOperationCompleted;
        
        private System.Threading.SendOrPostCallback qm_deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback qm_delete_send_ext_notifOperationCompleted;
        
        private System.Threading.SendOrPostCallback qm_selectOperationCompleted;
        
        private System.Threading.SendOrPostCallback qm_select3OperationCompleted;
        
        private System.Threading.SendOrPostCallback qm_select2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public questmanager_webservice() {
            this.Url = global::External_Services.Properties.Settings.Default.External_Services_QuestManagerWebService_questmanager_webservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event qm_insert_updateCompletedEventHandler qm_insert_updateCompleted;
        
        /// <remarks/>
        public event qm_insert_update_send_ext_notifCompletedEventHandler qm_insert_update_send_ext_notifCompleted;
        
        /// <remarks/>
        public event qm_deleteCompletedEventHandler qm_deleteCompleted;
        
        /// <remarks/>
        public event qm_delete_send_ext_notifCompletedEventHandler qm_delete_send_ext_notifCompleted;
        
        /// <remarks/>
        public event qm_selectCompletedEventHandler qm_selectCompleted;
        
        /// <remarks/>
        public event qm_select3CompletedEventHandler qm_select3Completed;
        
        /// <remarks/>
        public event qm_select2CompletedEventHandler qm_select2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("questmanager_webservice/qm_insert_update", RequestNamespace="questmanager_webservice", ResponseNamespace="questmanager_webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string qm_insert_update(string license_id, string permission_id, string xml_data) {
            object[] results = this.Invoke("qm_insert_update", new object[] {
                        license_id,
                        permission_id,
                        xml_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void qm_insert_updateAsync(string license_id, string permission_id, string xml_data) {
            this.qm_insert_updateAsync(license_id, permission_id, xml_data, null);
        }
        
        /// <remarks/>
        public void qm_insert_updateAsync(string license_id, string permission_id, string xml_data, object userState) {
            if ((this.qm_insert_updateOperationCompleted == null)) {
                this.qm_insert_updateOperationCompleted = new System.Threading.SendOrPostCallback(this.Onqm_insert_updateOperationCompleted);
            }
            this.InvokeAsync("qm_insert_update", new object[] {
                        license_id,
                        permission_id,
                        xml_data}, this.qm_insert_updateOperationCompleted, userState);
        }
        
        private void Onqm_insert_updateOperationCompleted(object arg) {
            if ((this.qm_insert_updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.qm_insert_updateCompleted(this, new qm_insert_updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("questmanager_webservice/qm_insert_update_send_ext_notif", RequestNamespace="questmanager_webservice", ResponseNamespace="questmanager_webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string qm_insert_update_send_ext_notif(string license_id, string permission_id, string xml_data) {
            object[] results = this.Invoke("qm_insert_update_send_ext_notif", new object[] {
                        license_id,
                        permission_id,
                        xml_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void qm_insert_update_send_ext_notifAsync(string license_id, string permission_id, string xml_data) {
            this.qm_insert_update_send_ext_notifAsync(license_id, permission_id, xml_data, null);
        }
        
        /// <remarks/>
        public void qm_insert_update_send_ext_notifAsync(string license_id, string permission_id, string xml_data, object userState) {
            if ((this.qm_insert_update_send_ext_notifOperationCompleted == null)) {
                this.qm_insert_update_send_ext_notifOperationCompleted = new System.Threading.SendOrPostCallback(this.Onqm_insert_update_send_ext_notifOperationCompleted);
            }
            this.InvokeAsync("qm_insert_update_send_ext_notif", new object[] {
                        license_id,
                        permission_id,
                        xml_data}, this.qm_insert_update_send_ext_notifOperationCompleted, userState);
        }
        
        private void Onqm_insert_update_send_ext_notifOperationCompleted(object arg) {
            if ((this.qm_insert_update_send_ext_notifCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.qm_insert_update_send_ext_notifCompleted(this, new qm_insert_update_send_ext_notifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("questmanager_webservice/qm_delete", RequestNamespace="questmanager_webservice", ResponseNamespace="questmanager_webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string qm_delete(string license_id, string permission_id, string xml_data) {
            object[] results = this.Invoke("qm_delete", new object[] {
                        license_id,
                        permission_id,
                        xml_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void qm_deleteAsync(string license_id, string permission_id, string xml_data) {
            this.qm_deleteAsync(license_id, permission_id, xml_data, null);
        }
        
        /// <remarks/>
        public void qm_deleteAsync(string license_id, string permission_id, string xml_data, object userState) {
            if ((this.qm_deleteOperationCompleted == null)) {
                this.qm_deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.Onqm_deleteOperationCompleted);
            }
            this.InvokeAsync("qm_delete", new object[] {
                        license_id,
                        permission_id,
                        xml_data}, this.qm_deleteOperationCompleted, userState);
        }
        
        private void Onqm_deleteOperationCompleted(object arg) {
            if ((this.qm_deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.qm_deleteCompleted(this, new qm_deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("questmanager_webservice/qm_delete_send_ext_notif", RequestNamespace="questmanager_webservice", ResponseNamespace="questmanager_webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string qm_delete_send_ext_notif(string license_id, string permission_id, string xml_data) {
            object[] results = this.Invoke("qm_delete_send_ext_notif", new object[] {
                        license_id,
                        permission_id,
                        xml_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void qm_delete_send_ext_notifAsync(string license_id, string permission_id, string xml_data) {
            this.qm_delete_send_ext_notifAsync(license_id, permission_id, xml_data, null);
        }
        
        /// <remarks/>
        public void qm_delete_send_ext_notifAsync(string license_id, string permission_id, string xml_data, object userState) {
            if ((this.qm_delete_send_ext_notifOperationCompleted == null)) {
                this.qm_delete_send_ext_notifOperationCompleted = new System.Threading.SendOrPostCallback(this.Onqm_delete_send_ext_notifOperationCompleted);
            }
            this.InvokeAsync("qm_delete_send_ext_notif", new object[] {
                        license_id,
                        permission_id,
                        xml_data}, this.qm_delete_send_ext_notifOperationCompleted, userState);
        }
        
        private void Onqm_delete_send_ext_notifOperationCompleted(object arg) {
            if ((this.qm_delete_send_ext_notifCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.qm_delete_send_ext_notifCompleted(this, new qm_delete_send_ext_notifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("questmanager_webservice/qm_select", RequestNamespace="questmanager_webservice", ResponseNamespace="questmanager_webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string qm_select(string license_id, string permission_id, string xml_data) {
            object[] results = this.Invoke("qm_select", new object[] {
                        license_id,
                        permission_id,
                        xml_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void qm_selectAsync(string license_id, string permission_id, string xml_data) {
            this.qm_selectAsync(license_id, permission_id, xml_data, null);
        }
        
        /// <remarks/>
        public void qm_selectAsync(string license_id, string permission_id, string xml_data, object userState) {
            if ((this.qm_selectOperationCompleted == null)) {
                this.qm_selectOperationCompleted = new System.Threading.SendOrPostCallback(this.Onqm_selectOperationCompleted);
            }
            this.InvokeAsync("qm_select", new object[] {
                        license_id,
                        permission_id,
                        xml_data}, this.qm_selectOperationCompleted, userState);
        }
        
        private void Onqm_selectOperationCompleted(object arg) {
            if ((this.qm_selectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.qm_selectCompleted(this, new qm_selectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("questmanager_webservice/qm_select3", RequestNamespace="questmanager_webservice", ResponseNamespace="questmanager_webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string qm_select3(string license_id, string permission_id, string register_id, string search_mode_int, string xml_data) {
            object[] results = this.Invoke("qm_select3", new object[] {
                        license_id,
                        permission_id,
                        register_id,
                        search_mode_int,
                        xml_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void qm_select3Async(string license_id, string permission_id, string register_id, string search_mode_int, string xml_data) {
            this.qm_select3Async(license_id, permission_id, register_id, search_mode_int, xml_data, null);
        }
        
        /// <remarks/>
        public void qm_select3Async(string license_id, string permission_id, string register_id, string search_mode_int, string xml_data, object userState) {
            if ((this.qm_select3OperationCompleted == null)) {
                this.qm_select3OperationCompleted = new System.Threading.SendOrPostCallback(this.Onqm_select3OperationCompleted);
            }
            this.InvokeAsync("qm_select3", new object[] {
                        license_id,
                        permission_id,
                        register_id,
                        search_mode_int,
                        xml_data}, this.qm_select3OperationCompleted, userState);
        }
        
        private void Onqm_select3OperationCompleted(object arg) {
            if ((this.qm_select3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.qm_select3Completed(this, new qm_select3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("questmanager_webservice/qm_select2", RequestNamespace="questmanager_webservice", ResponseNamespace="questmanager_webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string qm_select2(string license_id, string permission_id, string dt1, string dt2, string dt_mode_int, string xml_data) {
            object[] results = this.Invoke("qm_select2", new object[] {
                        license_id,
                        permission_id,
                        dt1,
                        dt2,
                        dt_mode_int,
                        xml_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void qm_select2Async(string license_id, string permission_id, string dt1, string dt2, string dt_mode_int, string xml_data) {
            this.qm_select2Async(license_id, permission_id, dt1, dt2, dt_mode_int, xml_data, null);
        }
        
        /// <remarks/>
        public void qm_select2Async(string license_id, string permission_id, string dt1, string dt2, string dt_mode_int, string xml_data, object userState) {
            if ((this.qm_select2OperationCompleted == null)) {
                this.qm_select2OperationCompleted = new System.Threading.SendOrPostCallback(this.Onqm_select2OperationCompleted);
            }
            this.InvokeAsync("qm_select2", new object[] {
                        license_id,
                        permission_id,
                        dt1,
                        dt2,
                        dt_mode_int,
                        xml_data}, this.qm_select2OperationCompleted, userState);
        }
        
        private void Onqm_select2OperationCompleted(object arg) {
            if ((this.qm_select2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.qm_select2Completed(this, new qm_select2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void qm_insert_updateCompletedEventHandler(object sender, qm_insert_updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class qm_insert_updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal qm_insert_updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void qm_insert_update_send_ext_notifCompletedEventHandler(object sender, qm_insert_update_send_ext_notifCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class qm_insert_update_send_ext_notifCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal qm_insert_update_send_ext_notifCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void qm_deleteCompletedEventHandler(object sender, qm_deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class qm_deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal qm_deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void qm_delete_send_ext_notifCompletedEventHandler(object sender, qm_delete_send_ext_notifCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class qm_delete_send_ext_notifCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal qm_delete_send_ext_notifCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void qm_selectCompletedEventHandler(object sender, qm_selectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class qm_selectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal qm_selectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void qm_select3CompletedEventHandler(object sender, qm_select3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class qm_select3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal qm_select3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void qm_select2CompletedEventHandler(object sender, qm_select2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class qm_select2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal qm_select2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591